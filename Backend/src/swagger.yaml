openapi: 3.0.0
info:
  title: Budget & Transaction API
  description: API for managing budgets and transactions for authenticated users
  version: 1.0.0
paths:
  /api/auth/reg:
    post:
      summary: User registration
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "User's email address."
                password:
                  type: string
                  description: "User's password."
                name:
                  type: string
                  description: "User's full name."
                phone:
                  type: string
                  description: "User's phone number."
      responses:
        '201':
          description: "User successfully registered."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully."
        '400':
          description: "Invalid input, missing required fields."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User validation failed: name: Path `name` is required., phone: Path `phone` is required."
        '500':
          description: "Internal server error."
  /api/auth/login:
    post:
      summary: User login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized
  /api/auth/logout:
    post:
      summary: User logout
      operationId: logout
      responses:
        '200':
          description: Logout successful
  /api/auth/profile/get-profile:
    get:
      summary: Get user profile
      operationId: getProfile
      responses:
        '200':
          description: User profile data
  /recommendation:
    get:
      summary: Get recommendations
      operationId: getRecommendations
      responses:
        '200':
          description: Recommendations data
    post:
      summary: Insert a new recommendation in the database
      consumes:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "67461c263eae0ad102d0bafb"
                preferences:
                  type: array
                  items:
                    type: string
                    example: "electronics"
      responses:
        '200':
          description: Recommendation generated successfully
        '400':
          description: Invalid input
  /recommendation/call-python:
    post:
      summary: Call Python script for generating a recommendation
      consumes:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactions:
                  type: array
                  items:
                    type: object
                    properties:
                      category:
                        type: string
                        example: "67461c263eae0ad102d0baf6"
                      amount:
                        type: number
                        example: 200.5
                      date:
                        type: string
                        format: date
                        example: "2024-11-15"
      responses:
        '200':
          description: Recommendation from Python script retrieved successfully
        '400':
          description: Failed to generate recommendation
  /budgets/my-budgets:
    get:
      summary: Get all budgets for the authenticated user
      operationId: getAllBudgets
      responses:
        '200':
          description: A list of budgets for the user
        '401':
          description: Unauthorized
    put:
      summary: Edit an existing budget for the authenticated user
      operationId: editBudget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                limit:
                  type: number
                  format: float
      responses:
        '200':
          description: Budget updated
        '400':
          description: Invalid input
    delete:
      summary: Delete a budget for the authenticated user
      parameters:
          schema:
            type: string
            description: "Authenticated budget ID."
      operationId: deleteBudget
      responses:
        '200':
          description: Budget deleted successfully
  /budgets/add-budget:
    post:
      summary: Add a new budget for the authenticated user
      operationId: addBudget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                limit:
                  type: number
                  format: float
      responses:
        '201':
          description: Budget created
        '400':
          description: Invalid input
  /transactions:
    get:
      summary: Get all transactions for the authenticated user
      operationId: getAllTransactions
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: A list of transactions
        '401':
          description: Unauthorized
    post:
      summary: Add a new transaction for the authenticated user
      operationId: addTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                category:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Transaction created
        '400':
          description: Invalid input
    delete:
      summary: Delete a transaction by ID for the authenticated user
      operationId: deleteTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Invalid transaction ID
  /transactions/{id}:
    get:
      summary: Get a single transaction by ID for the authenticated user
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A transaction object
        '400':
          description: Invalid transaction ID

  /analytics/TotalIncome:
    get:
      summary: "Get total income for the authenticated user."
      operationId: "getTotalIncome"
      security:
        - cookieAuth: []
      responses:
        '200':
          description: "Returns the total income for the user."
          content:
            application/json:
              schema:
                type: object
                properties:
                  income:
                    type: number
                    description: "Total income amount."
        '401':
          description: "Unauthorized access, token invalid or missing."
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message."

  /analytics/TotalExpenses:
    get:
      summary: "Get total expenses for the authenticated user."
      operationId: "getTotalExpenses"
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: user
          schema:
            type: string
            description: "Authenticated user ID."
      responses:
        '200':
          description: "Returns the total expenses for the user."
          content:
            application/json:
              schema:
                type: object
                properties:
                  expenses:
                    type: number
                    description: "Total expenses amount."
        '401':
          description: "Unauthorized access, token invalid or missing."
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message."

  /analytics/Balance:
    get:
      summary: "Get balance for the authenticated user."
      operationId: "getBalance"
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: user
          schema:
            type: string
            description: "Authenticated user ID."
      responses:
        '200':
          description: "Returns the current balance for the user."
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    description: "Current balance amount."
        '401':
          description: "Unauthorized access, token invalid or missing."
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message."

  /analytics/Overview:
    get:
      summary: "Get an overview of all analytics for the authenticated user."
      operationId: "getAnalyticsOverview"
      security:
        - cookieAuth: []
      responses:
        '200':
          description: "Returns an overview containing income, expenses, and balance."
          content:
            application/json:
              schema:
                type: object
                properties:
                  income:
                    type: number
                    description: "Total income amount."
                  expenses:
                    type: number
                    description: "Total expenses amount."
                  balance:
                    type: number
                    description: "Current balance amount."
        '401':
          description: "Unauthorized access, token invalid or missing."
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message."
